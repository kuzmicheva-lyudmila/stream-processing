{
	"info": {
		"_postman_id": "8dd9c166-2a60-4d88-98e5-ea3f30485a31",
		"name": "stream-processing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Signup user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var requestJson = JSON.parse(pm.request.body);\r",
							"pm.collectionVariables.set(\"userEmail\", requestJson[\"email\"]);\r",
							"pm.collectionVariables.set(\"userPassword\", requestJson[\"password\"]);\r",
							"pm.collectionVariables.set(\"userBalance\", 0);\r",
							"\r",
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"\r",
							"});\r",
							"\r",
							"console.log(\"request: \", pm.request);\r",
							"console.log(\"response: \", pm.response);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"{{$randomPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/auth/signup",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Signin user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJson = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"sessionToken\", responseJson[\"token\"]);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"console.log(\"request: \", pm.request);\r",
							"console.log(\"response: \", pm.response);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/auth/signin",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"signin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Increase bill",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    pm.collectionVariables.set(\"userBalance\", pm.collectionVariables.get(\"increaseBill\"));\r",
							"});\r",
							"\r",
							"console.log(\"request: \", pm.request);\r",
							"console.log(\"response: \", pm.response);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{sessionToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{increaseBill}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/billing/increase",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billing",
						"increase"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create first order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    var expectedBalance = pm.collectionVariables.get(\"userBalance\") - jsonData.amount;\r",
							"    pm.collectionVariables.set(\"userBalance\", expectedBalance);\r",
							"});\r",
							"\r",
							"console.log(\"request: \", pm.request);\r",
							"console.log(\"response: \", pm.response);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{sessionToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{firstOrderAmount}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get bill balance after first order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check bill balance\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    var userBalance = pm.collectionVariables.get(\"userBalance\")\r",
							"    pm.expect(jsonData).to.eql(userBalance);\r",
							"})\r",
							"\r",
							"console.log(\"request: \", pm.request);\r",
							"console.log(\"response: \", pm.response);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{sessionToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/billing",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billing"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get notification after first order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check notification\", function() {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(jsonData[0].status).to.eql(\"success\");\r",
							"})\r",
							"\r",
							"console.log(\"request: \", pm.request);\r",
							"console.log(\"response: \", pm.response);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{sessionToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/notifications",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notifications"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create second order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"console.log(\"request: \", pm.request);\r",
							"console.log(\"response: \", pm.response);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{sessionToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{secondOrderAmount}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get bill balance after second order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check bill balance\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    var userBalance = pm.collectionVariables.get(\"userBalance\")\r",
							"    pm.expect(jsonData).to.eql(userBalance);\r",
							"})\r",
							"\r",
							"console.log(\"request: \", pm.request);\r",
							"console.log(\"response: \", pm.response);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{sessionToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/billing",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billing"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get notification after second order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check notification\", function() {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(jsonData[1].status).to.eql(\"failure\");\r",
							"})\r",
							"\r",
							"console.log(\"request: \", pm.request);\r",
							"console.log(\"response: \", pm.response);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{sessionToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/notifications",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notifications"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "arch.homework/otusapp/kuzmicheva"
		},
		{
			"key": "userEmail",
			"value": ""
		},
		{
			"key": "userPassword",
			"value": ""
		},
		{
			"key": "sessionToken",
			"value": ""
		},
		{
			"key": "increaseBill",
			"value": "20000"
		},
		{
			"key": "firstOrderAmount",
			"value": "15000"
		},
		{
			"key": "secondOrderAmount",
			"value": "10000"
		},
		{
			"key": "userBalance",
			"value": ""
		}
	]
}